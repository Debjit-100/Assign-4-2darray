function findDisjoint(nums1, nums2) {
  const set1 = new Set(nums1);
  const set2 = new Set(nums2);
  const answer = [[], []];

  for (const num of nums1) {
    if (!set2.has(num)) {
      answer[0].push(num);
    }
  }

  for (const num of nums2) {
    if (!set1.has(num)) {
      answer[1].push(num);
    }
  }

  return answer;
}

// Test case
const nums1 = [1, 2, 3];
const nums2 = [2, 4, 6];
const answer = findDisjoint(nums1, nums2);
console.log(answer); // Output: [[1, 3], [4, 6]]
The findDisjoint function takes two arrays (nums1 and nums2) as input. It creates two sets (set1 and set2) to store the unique elements from each array.

Then, it initializes an answer array with two empty arrays.

The function iterates over each element in nums1 and checks if it is present in nums2 using the has method of the set. If the element is not found, it is added to answer[0].

Similarly, it iterates over each element in nums2 and checks if it is present in nums1. If the element is not found, it is added to answer[1].

Finally, the function returns the answer array containing the two lists of distinct integers that are not present in the respective arrays.
